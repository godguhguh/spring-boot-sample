
# \u6570\u636E\u6E90 db0,db1,db2
spring.shardingsphere.datasource.names=db0,db1,db2
# \u7B2C\u4E00\u4E2A\u6570\u636E\u5E93
spring.shardingsphere.datasource.db0.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db0.jdbc-url=jdbc:mysql://localhost:3306/db0?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.db0.username=root
spring.shardingsphere.datasource.db0.password=root

# \u7B2C\u4E8C\u4E2A\u6570\u636E\u5E93
spring.shardingsphere.datasource.db1.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db1.jdbc-url=jdbc:mysql://localhost:3306/db1?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.db1.username=root
spring.shardingsphere.datasource.db1.password=root

# \u7B2C\u4E09\u4E2A\u6570\u636E\u5E93
spring.shardingsphere.datasource.db2.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.db2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.db2.jdbc-url=jdbc:mysql://localhost:3306/db2?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC
spring.shardingsphere.datasource.db2.username=root
spring.shardingsphere.datasource.db2.password=root

# \u6C34\u5E73\u62C6\u5206\u7684\u6570\u636E\u5E93\uFF08\u8868\uFF09 \u914D\u7F6E\u5206\u5E93 + \u5206\u8868\u7B56\u7565 \u884C\u8868\u8FBE\u5F0F\u5206\u7247\u7B56\u7565
# \u5206\u5E93\u7B56\u7565
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=db$->{id % 3}

#Precise\u5206\u7247\u7B56\u7565
#spring.shardingsphere.sharding.default-database-strategy.standard.sharding-column=order_id
#spring.shardingsphere.sharding.default-database-strategy.standard.precise-algorithm-class-name=com.ypp.tunte.sample.sharding.jdbc.config.DatabasePreciseShardingAlgorithm

#Complex\u5206\u7247\u7B56\u7565
spring.shardingsphere.sharding.default-database-strategy.complex.sharding-columns=order_id,id
spring.shardingsphere.sharding.default-database-strategy.complex.algorithm-class-name=com.ypp.tunte.sample.sharding.jdbc.config.DatabaseComplexShardingAlgorithm


# \u5206\u8868\u7B56\u7565 \u5176\u4E2Dt_order\u4E3A\u903B\u8F91\u8868 \u5206\u8868\u4E3B\u8981\u53D6\u51B3\u4E8Eid\u884C
spring.shardingsphere.sharding.tables.t_order.actual-data-nodes=db$->{0..2}.t_order_$->{0..2}

#inline\u5206\u7247\u914D\u7F6E
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.sharding-column=order_id
#spring.shardingsphere.sharding.tables.t_order.table-strategy.inline.algorithm-expression=t_order_$->{order_id % 3}

#\u6807\u51C6\u5206\u7247\u7B56\u7565\u4E4BPreciseShardingAlgorithm\u7B97\u6CD5
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.sharding.tables.t_order.table-strategy.standard..precise-algorithm-class-name=com.ypp.tunte.sample.sharding.jdbc.config.OrderPreciseShardingAlgorithm

# \u5206\u8868\u7B56\u7565 \u5176\u4E2Dt_order\u4E3A\u903B\u8F91\u8868 \u5206\u8868\u4E3B\u8981\u53D6\u51B3\u4E8Eid\u884C
spring.shardingsphere.sharding.tables.t_order_item.actual-data-nodes=db$->{0..2}.t_order_item_$->{0..2}
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.sharding-column=order_id
# \u5206\u7247\u7B97\u6CD5\u8868\u8FBE\u5F0F
spring.shardingsphere.sharding.tables.t_order_item.table-strategy.inline.algorithm-expression=t_order_item_$->{order_id % 3}

spring.shardingsphere.sharding.binding-tables=t_order, t_order_item

spring.shardingsphere.sharding.tables.t_book.actual-data-nodes=db$->{0..2}.t_book_$->{0..2}
spring.shardingsphere.sharding.tables.t_book.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.t_book.table-strategy.inline.algorithm-expression=t_book_$->{id % 3}


# \u5E7F\u64AD\u8868, \u5176\u4E3B\u8282\u70B9\u662Fdb0
spring.shardingsphere.sharding.tables.t_address.actual-data-nodes=db$->{0}.t_address
spring.shardingsphere.sharding.tables.t_user.actual-data-nodes=db$->{0}.t_user

spring.shardingsphere.sharding.broadcast-tables=t_address,t_user


# \u4E3B\u952E UUID 18\u4F4D\u6570 \u5982\u679C\u662F\u5206\u5E03\u5F0F\u8FD8\u8981\u8FDB\u884C\u4E00\u4E2A\u8BBE\u7F6E \u9632\u6B62\u4E3B\u952E\u91CD\u590D
#sharding.jdbc.config.sharding.tables.user.key-generator-column-name=id

# \u6253\u5370\u6267\u884C\u7684\u6570\u636E\u5E93\u4EE5\u53CA\u8BED\u53E5
spring.shardingsphere.props..sql.show=true
spring.main.allow-bean-definition-overriding=true
